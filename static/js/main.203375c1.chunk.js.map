{"version":3,"sources":["reducers/blogList.js","constants.js","reducers/currentPost.js","store.js","reducers/index.js","components/Header.jsx","components/Footer.jsx","Wrapper.jsx","containers/BlogList.jsx","actions/actionCreator.js","pages/Home.jsx","components/CommentBox.jsx","components/CommentAdd.jsx","containers/PostSingle.jsx","pages/Post.jsx","index.js"],"names":["initialState","reducers_blogList","state","arguments","length","undefined","_ref","type","posts","Object","toConsumableArray","reducers_currentPost","post","history","createHashHistory","hashType","composeEnhancers","compose","store","preloadedState","createStore","combineReducers","router","connectRouter","blogList","currentPost","applyMiddleware","routerMiddleware","thunk","configureStore","Title","styled","h1","_templateObject","HeaderWrap","header","_templateObject2","Header","react_default","a","createElement","style","color","CopyRight","span","Footer_templateObject","FooterWrap","footer","Footer_templateObject2","Footer","Wrap","div","Wrapper_templateObject","Wrapper","children","components_Header","components_Footer","BlogList_templateObject","h2","BlogList_templateObject2","BlogListTitle","_templateObject3","BlogList","fetchPosts","this","props","fetch","then","res","json","BlogList_Wrap","BlogList_Title","map","el","i","key","id","react_router_dom","to","concat","title","Component","connect","Home","src_Wrapper","containers_BlogList","Comments","CommentBox_templateObject","Comment","CommentBox_templateObject2","CommentText","p","CommentBox_templateObject3","CommentBox","comments","body","h5","CommentAdd_templateObject","CommentAddBox","textarea","CommentAdd_templateObject2","Button","button","CommentAdd_templateObject3","withRouter","postRouterId","match","params","postId","_useState","useState","_useState2","slicedToArray","textAreaValue","setTextAreaValue","Fragment","CommentAdd_Title","onChange","e","console","log","target","value","onClick","method","headers","Accept","Content-Type","JSON","stringify","PostSingle_templateObject","PostSingle_templateObject2","Description","PostSingle_templateObject3","PostWrap","_templateObject4","PostSingle","fetchCurrentPost","getCurrentPost","prevProps","prevState","PostSingle_Wrap","PostSingle_Title","components_CommentBox","components_CommentAdd","Post","containers_PostSingle","ReactDOM","render","es","esm","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.203375c1.chunk.js","sourcesContent":["import { FETCH_POSTS_SUCCESS } from \"../constants\";\n\nconst initialState = [];\n\nexport default (state = initialState, { type, posts }) => {\n  switch (type) {\n    case FETCH_POSTS_SUCCESS:\n      return [...posts];\n    default:\n      return state;\n  }\n};\n","export const FETCH_POSTS_START = \"FETCH_POSTS_START\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_POSTS_FAILTURE = \"FETCH_POSTS_FAILTURE\";\n\nexport const FETCH_CURRENT_POST_START = \"FETCH_CURRENT_POST_START\";\nexport const FETCH_CURRENT_POST_SUCCESS = \"FETCH_CURRENT_POST_SUCCESS\";\nexport const FETCH_CURRENT_POST_FAILTURE = \"FETCH_CURRENT_POST_FAILTURE\";\n","import { FETCH_CURRENT_POST_SUCCESS } from \"../constants\";\n\nconst initialState = {};\n\nexport default (state = initialState, { type, post }) => {\n  switch (type) {\n    case FETCH_CURRENT_POST_SUCCESS:\n      return post;\n    default:\n      return state;\n  }\n};\n","import { createHashHistory } from \"history\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport const history = createHashHistory({\n  hashType: \"slash\"\n});\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n/* eslint-enable */\n\nconst configureStore = preloadedState =>\n  createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), thunk))\n  );\n\nconst store = configureStore({});\n\nexport default store;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport blogList from \"../reducers/blogList\";\nimport currentPost from \"../reducers/currentPost\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    blogList,\n    currentPost\n  });\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #fff;\n`;\n\nconst HeaderWrap = styled.header`\n  padding: 4em;\n  background: #3f51b5;\n`;\n\nconst Header = () => {\n  return (\n    <HeaderWrap>\n      <Title>\n        Jon <span style={{ color: \"#e91e63\" }}>Blog</span> Test - Hello here!\n      </Title>\n    </HeaderWrap>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CopyRight = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  text-transform: uppercase;\n  text-align: center;\n  display: block;\n  color: #3f51b5;\n`;\n\nconst FooterWrap = styled.footer`\n  padding: 15px;\n  background: #d2d2fd;\n`;\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <CopyRight>By Alex Komarevich 2019</CopyRight>\n    </FooterWrap>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst Wrap = styled.div`\n  background: #eaeaea;\n`;\n\nconst Wrapper = ({ children }) => {\n  return (\n    <Wrap>\n      <Header />\n      {children}\n      <Footer />\n    </Wrap>\n  );\n};\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../actions/actionCreator\";\n\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  background: #eaeaea;\n  padding: 40px;\n  border: 20px solid #e91e63;\n  margin: 60px;\n`;\nconst Title = styled.h2`\n  color: #e91e63;\n  font-size: 22px;\n  margin: 0 0 15px 0;\n`;\nconst BlogListTitle = styled.span`\n  color: #3f51b5;\n  font-size: 18px;\n  display: inline-block;\n  padding: 0 0 10px 0;\n  &:hover {\n    color: #e91e63;\n  }\n`;\n\nclass BlogList extends Component {\n  async componentDidMount() {\n    const { fetchPosts } = this.props;\n    await fetch(\"https://simple-blog-api.crew.red/posts\")\n      .then(res => res.json())\n      .then(json => fetchPosts(json));\n  }\n\n  render() {\n    const { blogList } = this.props;\n    return (\n      <Wrap>\n        <Title>Latest Posts</Title>\n        {blogList && (\n          <ul>\n            {blogList.map((el, i) => (\n              <li key={el.id}>\n                <Link to={`/posts/${el.id}`}>\n                  <BlogListTitle>{el.title}</BlogListTitle>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </Wrap>\n    );\n  }\n}\n\nexport default connect(\n  ({ blogList }) => ({\n    blogList\n  }),\n  { fetchPosts }\n)(BlogList);\n","import { FETCH_POSTS_SUCCESS, FETCH_CURRENT_POST_SUCCESS } from \"../constants\";\n\nexport const fetchPosts = posts => ({\n  type: FETCH_POSTS_SUCCESS,\n  posts\n});\n\nexport const fetchCurrentPost = post => ({\n  type: FETCH_CURRENT_POST_SUCCESS,\n  post\n});\n","import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport BlogList from \"../containers/BlogList\";\n\nconst Home = () => {\n  return (\n    <Wrapper>\n      <BlogList />\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Comments = styled.div`\n  background-color: #ccc;\n  border: 5px solid #e91e63;\n  padding: 20px;\n  margin: 20px 0;\n`;\nconst Comment = styled.div`\n  background-color: #718792;\n  border: 2px solid #29434e;\n  padding: 20px;\n  margin: 20px 0;\n`;\nconst CommentText = styled.p`\n  color: #000;\n`;\nconst CommentBox = ({ comments }) => {\n  return (\n    <Comments>\n      {comments.map((el, i) => (\n        <Comment key={el.id}>\n          <CommentText>{el.body}</CommentText>\n        </Comment>\n      ))}\n    </Comments>\n  );\n};\n\nexport default CommentBox;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nconst Title = styled.h5`\n  color: #3f51b5;\n  margin: 30px 0 0 0;\n`;\nconst CommentAddBox = styled.textarea`\n  background-color: #29434e;\n  border: 5px solid #718792;\n  color: #fff;\n  padding: 15px;\n  margin: 20px 0;\n  width: 100%;\n`;\nconst Button = styled.button`\n  display: flex\n  justify-content: center\n  align-items: stretch\n  background-color: #455a64\n  color: #fff\n  text-transform: uppercase\n  border: 0\n  outline: none\n  border-radius: 3px\n  margin: 0\n  transition: all 0.3s\n  font-size: 16px\n  padding: 10px\n  cursor: pointer\n  &:hover {\n    background-color: #e91e63;\n  }\n`;\n\nconst CommentAdd = ({\n  comments,\n  match: {\n    params: { postId: postRouterId }\n  }\n}) => {\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const updateTextAreaValue = e => {\n    console.log(textAreaValue);\n    return setTextAreaValue(e.target.value);\n  };\n\n  const handleClick = e => {\n    fetch(\"https://simple-blog-api.crew.red/comments\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId: +postRouterId,\n        body: textAreaValue\n      })\n    }).then(() => setTextAreaValue(\"\"));\n  };\n  return (\n    <>\n      <Title>Add Comment</Title>\n      <CommentAddBox onChange={updateTextAreaValue} value={textAreaValue} />\n      <Button onClick={handleClick}>Submit</Button>\n    </>\n  );\n};\n\nexport default withRouter(CommentAdd);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { fetchCurrentPost } from \"../actions/actionCreator\";\n\nimport CommentBox from \"../components/CommentBox\";\nimport CommentAdd from \"../components/CommentAdd\";\n\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  background: #eaeaea;\n  padding: 40px;\n  border: 20px solid #e91e63;\n  margin: 60px;\n`;\nconst Title = styled.h2`\n  color: #e91e63;\n  font-size: 22px;\n  margin: 0 0 15px 0;\n`;\nconst Description = styled.p`\n  color: #000;\n  font-size: 16px;\n`;\nconst PostWrap = styled.div`\n  background-color: #ccc;\n  padding: 20px;\n`;\nclass PostSingle extends Component {\n  async getCurrentPost(props) {\n    const {\n      fetchCurrentPost,\n      match: {\n        params: { postId: postRouterId }\n      }\n    } = props;\n    await fetch(\n      `https://simple-blog-api.crew.red/posts/${postRouterId}?_embed=comments`\n    )\n      .then(res => res.json())\n      .then(json => fetchCurrentPost(json));\n  }\n  componentDidMount() {\n    this.getCurrentPost(this.props);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPost } = this.props;\n    if (currentPost !== prevProps.currentPost) {\n      this.getCurrentPost(this.props);\n    }\n  }\n  render() {\n    const { currentPost } = this.props;\n    const comments = currentPost.comments;\n    return (\n      <Wrap>\n        <Link to=\"/\">Go Home</Link>\n        {currentPost && (\n          <>\n            <PostWrap>\n              <Title>{currentPost.title}</Title>\n              <Description>{currentPost.body}</Description>\n            </PostWrap>\n            {comments && comments.length > 0 ? (\n              <CommentBox comments={comments} />\n            ) : null}\n            <CommentAdd />\n          </>\n        )}\n      </Wrap>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    ({ currentPost }) => ({\n      currentPost\n    }),\n    { fetchCurrentPost }\n  )(PostSingle)\n);\n","import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport PostSingle from \"../containers/PostSingle\";\n\nconst Post = () => {\n  return (\n    <Wrapper>\n      <PostSingle />\n    </Wrapper>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport { Provider } from \"react-redux\";\nimport store, { history } from \"./store\";\n\nimport Home from \"./pages/Home\";\nimport Post from \"./pages/Post\";\n\nimport \"./styles/main.sass\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/posts/:postId\" component={Post} />\n        <Route render={() => <div>Miss</div>} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}